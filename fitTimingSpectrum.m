function [fitresult, gof] = fitTimingSpectrum(t, IFT,Delta_t_estimate,debug)
%CREATEFIT(T,IFT)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : t
%      Y Output: IFT
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 02-Nov-2018 16:01:37


%% Fit: 'untitled fit 1'.

% Rescale the data!
t = t*1e12;
IFT = abs(IFT/max(IFT));


[xData, yData] = prepareCurveData( t, IFT );

% Set up fittype and options.
ft = fittype( 'exp( -2*x.^2/(c1^2)) + b*exp( -2*(x-t0).^2/(c2^2))', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 0 0 Delta_t_estimate/2];
opts.StartPoint = [1 Delta_t_estimate/4 Delta_t_estimate/4 Delta_t_estimate];
opts.Upper = [1 Delta_t_estimate/2 Delta_t_estimate/2 1.5*Delta_t_estimate];

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

coeffs = coeffvalues(fitresult);

if debug
    % Plot fit with data.
    figure( 'Name', 'untitled fit 1' );
    h = plot( fitresult, xData, yData );
    legend( h, 'IFT vs. t', 'untitled fit 1', 'Location', 'NorthEast' );
    % Label axes
    xlabel t
    ylabel IFT
    grid on
    hold on
    t2 = linspace(0,2*coeffs(4),1000);
    plot(t2,exp( -2*t2.^2/(coeffs(2)^2)) + coeffs(1)*exp( -2*(t2-coeffs(4)).^2/(coeffs(3)^2) ))
end


